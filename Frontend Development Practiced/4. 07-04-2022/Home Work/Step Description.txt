Homework Assignment: Creating a Stylish Webpage with HTML and CSS
Objective:Create a webpage using HTML and CSS that incorporates various styling techniques. Follow the step-by-step instructions below to design a visually appealing webpage similar to the provided example.
Step 1: Set Up Your Project:
Create a new folder for your project and name it appropriately.
Inside the project folder, create two files: index.html for HTML and style.css for CSS.
Step 2: HTML Structure:
Open the index.html file and set up the basic HTML structure.
Add a DOCTYPE declaration, <html> tag with a language attribute, and a <head> section.
Inside the <head>, include meta tags for character set and viewport, and link the CSS file.
Step 3: Create the Main Container:
Inside the <body> tag, create a <div> element with an id of "main-container."
Within this container, add an <h1> with the class "header" and an introductory paragraph using the <p> tag.
Step 4: Style the Header and Container:
Open the style.css file and start with a reset: body { margin: 0; padding: 0; }.
Style the #main-container by setting a width, margin, padding, and background color.
For the .header, define colors for text and background to create an attractive header.
Step 5: Add a Styled Box:
Back in the index.html file, create a <div> with the class "box" inside the main container.
Insert a <p> inside the box with some content.
In style.css, style the .box by adding a border, padding, and margin. Style the paragraph inside to be italicized.
Step 6: Work with Lists:
Include an unordered list (<ul>) with three list items (<li>) containing short descriptions.
In style.css, style the <ul> by giving it a background color and the <li> elements by changing their text color.
Step 7: Create a Container with Border:
Add a <div> with the class "container" below the list in the HTML file.
In style.css, apply a dashed border, padding, and margin to the .container.
Step 8: Add Images:
Insert an <div> with the class "image-container" and include multiple <img> tags inside it, each with a different src and alt attribute.
In style.css, style the .image-container by adding a margin. Style the images by setting their display, height, width, border, border-radius, and box-shadow properties.
Step 9: Add a Horizontal Line and a Link:
Insert an <hr> (horizontal line) after the image container.
Include a link (<a>) with the class "link" and set its href attribute to "#" for now.
Step 10: Style the Link:
In style.css, style the .link by changing its color and removing the default underline. Add a hover effect if you like.
Step 11: Background Color and Final Touch:
Set a background color for the entire webpage in style.css by targeting the body or #main-container.
Experiment with additional styling to enhance the overall appearance.
Step 12: Test and Review:
Open your index.html file in a web browser to see the results. Ensure that the webpage looks visually appealing and matches the provided example.
Step 13: Optional Challenge:
As an optional challenge, try adding a new CSS rule in style.css to change the font style or color for the paragraphs inside the "box" (p elements inside the .box). Observe how it affects the appearance of the content.
Submission:Submit your project folder containing the index.html and style.css files.
----------------------------------------------------------------------------------------------------------------------------------------
CSS Styling Guide:
Step 1: Reset Default Styles:Begin by resetting default styles to create a consistent starting point. The body selector is used to remove any default margins and padding.
Step 2: Main Container Styling:Define the styles for the main container (#main-container). Set a width of 80%, center it on the page, give it a light blue background color, and add padding to create a visually appealing layout.
Step 3: Header Styling:Style the header (h1 with the class "header"). Choose a text color of dark gray and a background color of orange to make it stand out.
Step 4: Box Styling:Create a visually attractive box (div with the class "box"). Apply a 2px solid blue border, 10px padding, and a top margin of 15px.
Step 5: Box Paragraph Styling:Style the paragraph inside the box (p inside the .box). Make the text italic and set the color to dark gray for a refined appearance.
Step 6: List Styling:Enhance the look of the unordered list (ul). Apply a semi-transparent green background to distinguish it. Style list items (li) with a green text color.
Step 7: Additional List Paragraph Styling:For the paragraph following the list (p after the ul), add extra emphasis by making the text bold.
Step 8: Link Styling:Style links (a with the class "link") by choosing a blue color and removing the default underline for a cleaner look.
Step 9: Container with Border Styling:Create a container with a dashed border (div with the class "container"). Add a 1px dashed border, 10px padding, and a top margin of 15px.
Step 10: Image Container Styling:Style the image container (div with the class "image-container"). Apply a top margin of 20px for spacing. Customize image styles by setting a fixed height and width, adding a border, border-radius, and a subtle box shadow.
Step 11: Final Touch:Add any final touches or additional styles to enhance the overall appearance. This could include experimenting with fonts, colors, or additional layout adjustments.